<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:FluentLaunch="clr-namespace:FluentLaunch"
                    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#12FFFFFF" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="DimGray" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="DimGray" />
    <SolidColorBrush x:Key="Item.MouseOver.DarkBackground" Color="#12000000" />

    <Style x:Key="ListBoxItemLightStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderThickness="2" Background="#32D7D7D7" Padding="{TemplateBinding Padding}"
                            CornerRadius="5" SnapsToDevicePixels="true" Margin="3"
                            xf:Animations.Primary="{xf:Animate BasedOn={StaticResource Expand}, Event=PointerOver}"
                            xf:Animations.Secondary="{xf:Animate BasedOn={StaticResource Contract}, Event=PointerExit}">
                        <Border.BorderBrush>
                            <FluentLaunch:RevealBorderBrush Color="DimGray" FallbackColor="Gray" />
                        </Border.BorderBrush>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemDarkStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderThickness="2" Background="#32585858" Padding="{TemplateBinding Padding}" CornerRadius="5" SnapsToDevicePixels="true" Margin="3">
                        <Border.BorderBrush>
                            <FluentLaunch:RevealBorderBrush Color="White" FallbackColor="Gray" />
                        </Border.BorderBrush>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.DarkBackground}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ListBoxDarkStyle">
        <Grid Width="120" Height="120">
            <Rectangle Width="56" Height="56" Margin="0 18 0 0" VerticalAlignment="Top">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="{Binding Icon}" Stretch="Uniform">
                    </ImageBrush>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock Foreground="White" Text="{Binding Title}" ToolTip="{Binding ToolTip}" Margin="0 0 0 10" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListBoxLightStyle">
        <Grid Width="120" Height="120">
            <Rectangle Width="56" Height="56" Margin="0 18 0 0" VerticalAlignment="Top">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="{Binding Icon}" Stretch="Uniform">
                    </ImageBrush>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock Foreground="Black" Text="{Binding Title}" ToolTip="{Binding ToolTip}" Margin="0 0 0 10" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Center" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="WindowDark" TargetType="Window">
        <!-- 外边框特效 -->
        <Border BorderThickness="2">
            <Border.BorderBrush>
                <FluentLaunch:RevealBorderBrush Color="White" FallbackColor="Gray" />
            </Border.BorderBrush>
            <AdornerDecorator>
                <ContentPresenter />
            </AdornerDecorator>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="WindowLight" TargetType="Window">
        <!-- 外边框特效 -->
        <Border BorderThickness="2">
            <Border.BorderBrush>
                <FluentLaunch:RevealBorderBrush Color="DimGray" FallbackColor="Gray" />
            </Border.BorderBrush>
            <AdornerDecorator>
                <ContentPresenter />
            </AdornerDecorator>
        </Border>
    </ControlTemplate>
</ResourceDictionary>